{"version":3,"file":"static/js/168.12748f0f.chunk.js","mappings":"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","sources":["pages/Appointment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport appointmentHeader from \"../resources/appointment/appointmentHeader.png\";\r\nimport appLeft from \"../resources/appointment/appLeft.png\";\r\nimport { Box, Button, Skeleton, TextField, Typography } from \"@mui/material\";\r\nimport Aos from \"aos\";\r\nimport { Calendar } from \"primereact/calendar\";\r\nimport \"primereact/resources/themes/lara-light-cyan/theme.css\";\r\n\r\nconst Appointment = () => {\r\n  const [timeToLoad, setTimeToLoad] = useState(false);\r\n  const [datetime12h, setDateTime12h] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    subject: \"Appointment Request\",\r\n    name: \"\",\r\n    email: \"\",\r\n    contactNumber: \"\",\r\n    purposeOfMeeting: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let mailData = formData;\r\n\r\n    mailData.purposeOfMeeting = `${mailData.purposeOfMeeting} - ${datetime12h}`;\r\n\r\n    fetch(\"https://tatvamasi-server.vercel.app/sendmail\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(mailData),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.text(); // Get the text response\r\n      })\r\n      .then((data) => {\r\n        console.log(data); // \"Email sent successfully\"\r\n        alert(\"Email sent successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error sending email:\", error);\r\n        alert(\"Error sending email. Please try again later.\");\r\n      });\r\n    handleCancel();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Handle cancel action here\r\n    setFormData({\r\n      name: \"\",\r\n      email: \"\",\r\n      contactNumber: \"\",\r\n      purposeOfMeeting: \"\",\r\n    });\r\n    setDateTime12h(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Aos.init({\r\n      // Global settings:\r\n      delay: 100, // values from 0 to 3000, with step 50ms\r\n      duration: 1000, // values from 0 to 3000, with step 50ms\r\n      easing: \"ease\", // default easing for AOS animations\r\n      once: false, // whether animation should happen only once - while scrolling down\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setTimeToLoad(true);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        marginBottom: \"40px\",\r\n      }}\r\n    >\r\n      <Box>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: \"Montserrat-ExtraBoldItalic\",\r\n            color: \"#484848\",\r\n            fontSize: {\r\n              xl: \"39.58px\",\r\n              lg: \"39.58px\",\r\n              m: \"39.58px\",\r\n              sm: \"39.58px\",\r\n              xs: \"30px\",\r\n            },\r\n            textAlign: \"center\",\r\n            margin: \"20px\",\r\n          }}\r\n        >\r\n          Appointment\r\n        </Typography>\r\n        {timeToLoad ? (\r\n          <img\r\n            // data-aos=\"zoom-in\"\r\n            src={appointmentHeader}\r\n            alt=\"Tatvamasi Automation\"\r\n            style={{\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            animation=\"wave\"\r\n            width={\"100%\"}\r\n            height={\"300px\"}\r\n            sx={{\r\n              borderRadius: \"10px\",\r\n            }}\r\n          />\r\n        )}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-around\",\r\n          flexDirection: {\r\n            xl: \"row\",\r\n            lg: \"row\",\r\n            m: \"row\",\r\n            sm: \"row\",\r\n            xs: \"column\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          className=\"left\"\r\n          sx={{\r\n            width: {\r\n              xl: \"25%\",\r\n              lg: \"25%\",\r\n              m: \"25%\",\r\n              sm: \"25%\",\r\n              xs: \"50%\",\r\n            },\r\n          }}\r\n        >\r\n          <img\r\n            src={appLeft}\r\n            alt=\"Please fill the form for appointment\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"auto\",\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box\r\n          className=\"right\"\r\n          sx={{\r\n            width: {\r\n              xl: \"40%\",\r\n              lg: \"40%\",\r\n              m: \"40%\",\r\n              sm: \"40%\",\r\n              xs: \"90%\",\r\n            },\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontSize: \"30px\",\r\n              fontFamily: \"Montserrat-Bold\",\r\n              textAlign: \"center\",\r\n              mt: 4,\r\n            }}\r\n          >\r\n            Contact us\r\n          </Typography>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Contact Number\"\r\n              name=\"contactNumber\"\r\n              value={formData.contactNumber}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              label=\"Purpose of Meeting\"\r\n              name=\"purposeOfMeeting\"\r\n              value={formData.purposeOfMeeting}\r\n              onChange={handleChange}\r\n            />\r\n            <Box\r\n              className=\"card flex flex-wrap gap-3 p-fluid\"\r\n              sx={{\r\n                margin: \"10px 0\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            >\r\n              <Box className=\"flex-auto\">\r\n                <Calendar\r\n                  placeholder=\"Select Date & Time\"\r\n                  id=\"calendar-12h\"\r\n                  value={datetime12h}\r\n                  onChange={(e) => {\r\n                    setDateTime12h(e.value);\r\n                  }}\r\n                  showTime\r\n                  hourFormat=\"12\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                margin: \"10px 0\",\r\n              }}\r\n            >\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                sx={{\r\n                  borderRadius: \"20px\",\r\n                  width: \"200px\",\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                onClick={handleCancel}\r\n                sx={{\r\n                  borderRadius: \"20px\",\r\n                  width: \"200px\",\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","timeToLoad","setTimeToLoad","_useState3","_useState4","datetime12h","setDateTime12h","_useState5","subject","name","email","contactNumber","purposeOfMeeting","_useState6","formData","setFormData","handleChange","e","_e$target","target","value","prevState","_objectSpread","_defineProperty","handleCancel","useEffect","Aos","delay","duration","easing","once","setTimeout","_jsxs","Box","sx","width","marginBottom","children","_jsx","Typography","fontFamily","color","fontSize","xl","lg","m","sm","xs","textAlign","margin","src","appointmentHeader","alt","style","Skeleton","variant","animation","height","borderRadius","display","alignItems","justifyContent","flexDirection","className","appLeft","mt","onSubmit","preventDefault","mailData","concat","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","text","data","console","log","alert","catch","error","TextField","fullWidth","label","onChange","Calendar","placeholder","id","showTime","hourFormat","Button","type","onClick"],"sourceRoot":""}