{"version":3,"file":"static/js/990.abb5cfde.chunk.js","mappings":"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","sources":["components/eletricalsolution/Panel.js","components/tenders/ZoomedImage.js","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["import { Box, Grid, Skeleton, Typography } from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/PCCStyle.css\";\r\nimport { data } from \"../../resources/data/data\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Aos from \"aos\";\r\nimport \"../../../node_modules/aos/dist/aos.css\";\r\n// import ReactPlayer from \"react-player\";\r\nimport ZoomedImage from \"../tenders/ZoomedImage\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\n\r\nconst Panel = () => {\r\n  const PanelList = data[1].panels;\r\n  let { panel } = useParams();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [timeToLoad, setTimeToLoad] = useState(false);\r\n\r\n  const handleImageClick = (img) => {\r\n    setSelectedImage(img);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const Specs = PanelList.find((p) => p.path === panel);\r\n\r\n  useEffect(() => {\r\n    Aos.init({\r\n      // Global settings:\r\n      delay: 0, // values from 0 to 3000, with step 50ms\r\n      duration: 1000, // values from 0 to 3000, with step 50ms\r\n      easing: \"ease\", // default easing for AOS animations\r\n      once: false, // whether animation should happen only once - while scrolling down\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setTimeToLoad(true);\r\n    }, 3000);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          margin: \"auto\",\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            margin: \"50px 0\",\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontFamily: \"Neuropolitical\",\r\n              color: \"#162866\",\r\n              fontSize: \"40px\",\r\n            }}\r\n          >\r\n            {Specs.name}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography\r\n            sx={{\r\n              fontSize: \"18px\",\r\n              textAlign: \"justify\",\r\n              fontFamily: \"Montserrat\",\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            {Specs.desc}\r\n          </Typography>\r\n          {/* <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              margin: \"20px 0\",\r\n              flexDirection: {\r\n                xl: \"row\",\r\n                lg: \"row\",\r\n                m: \"row\",\r\n                sm: \"row\",\r\n                xs: \"column\",\r\n              },\r\n            }}\r\n          >\r\n            <img\r\n              src={DemoPanel}\r\n              alt=\"\"\r\n              className=\"panel-image\"\r\n              data-aos=\"fade-right\"\r\n            />\r\n            <img\r\n              src={DemoPanel}\r\n              alt=\"\"\r\n              className=\"panel-image\"\r\n              data-aos=\"fade-left\"\r\n            />\r\n          </Box> */}\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"flex-start\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Grid item xs={12} md={6}>\r\n              <Box\r\n                sx={{\r\n                  width: {\r\n                    xs: \"100%\",\r\n                    sm: \"80%\",\r\n                    md: \"100%\",\r\n                    lg: \"100%\",\r\n                    xl: \"100%\",\r\n                  },\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                <Carousel animation=\"slide\" duration={\"700\"}>\r\n                  {timeToLoad\r\n                    ? Specs?.images?.length > 0 &&\r\n                      Specs?.images?.map((item, i) => (\r\n                        <img\r\n                          key={i}\r\n                          data-aos=\"zoom-out\"\r\n                          src={item}\r\n                          alt=\"\"\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: {\r\n                              xs: \"auto\",\r\n                              sm: \"auto\",\r\n                              md: \"325px\",\r\n                              lg: \"325px\",\r\n                              xl: \"325px\",\r\n                            },\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                          onClick={() => handleImageClick(item)}\r\n                        />\r\n                      ))\r\n                    : Specs?.images?.length > 0 && (\r\n                        <Skeleton\r\n                          variant=\"rectangular\"\r\n                          animation=\"wave\"\r\n                          width={\"100%\"}\r\n                          height={\"325px\"}\r\n                          sx={{\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        />\r\n                      )}\r\n                </Carousel>\r\n                <ZoomedImage\r\n                  open={open}\r\n                  handleClose={handleClose}\r\n                  src={selectedImage}\r\n                />\r\n\r\n                {/* Image Component */}\r\n              </Box>\r\n            </Grid>\r\n            {/* NONE videos as of now */}\r\n            {/* <Grid item xs={12} md={6}>\r\n              <Box\r\n                sx={{\r\n                  width: {\r\n                    xs: \"100%\",\r\n                    sm: \"80%\",\r\n                    md: \"100%\",\r\n                    lg: \"100%\",\r\n                    xl: \"100%\",\r\n                  },\r\n                  margin: \"auto\",\r\n                  height: {\r\n                    xs: \"325px\",\r\n                    sm: \"325px\",\r\n                    md: \"325px\",\r\n                    lg: \"325px\",\r\n                    xl: \"325px\",\r\n                  },\r\n                }}\r\n                data-aos=\"zoom-out\"\r\n              >\r\n                <ReactPlayer\r\n                  url={Specs.youtube}\r\n                  controls={true}\r\n                  width={\"100%\"}\r\n                  height={\"85%\"}\r\n                  // style={{\r\n                  //   maxHeight: \"325px\",\r\n                  // }}\r\n                />\r\n              </Box>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Box>\r\n        {Specs.specs && (\r\n          <Box>\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Montserrat-Bold\",\r\n                color: \"#162866\",\r\n                fontSize: {\r\n                  xl: \"35px\",\r\n                  lg: \"35px\",\r\n                  m: \"35px\",\r\n                  sm: \"35px\",\r\n                  xs: \"20px\",\r\n                },\r\n                textAlign: \"center\",\r\n                fontWeight: \"700\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n            >\r\n              Specifications\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        {Specs.whatAre && (\r\n          <Box>\r\n            <Typography\r\n              sx={{\r\n                color: \"rgba(22, 40, 102, 1)\",\r\n                fontFamily: \"Montserrat\",\r\n                fontSize: {\r\n                  xl: \"2rem\",\r\n                  lg: \"2rem\",\r\n                  m: \"2rem\",\r\n                  sm: \"1.5rem\",\r\n                  xs: \"1.5rem\",\r\n                },\r\n                textAlign: \"left\",\r\n                margin: \"25px 0\",\r\n              }}\r\n            >\r\n              {Specs.whatAre.title}\r\n            </Typography>\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Montserrat\",\r\n                textAlign: \"justify\",\r\n              }}\r\n            >\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              {Specs.whatAre.data}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        <Box>\r\n          <Box\r\n            sx={{\r\n              fontFamily: \"Montserrat-Bold\",\r\n              textAlign: \"center\",\r\n              margin: \"50px 0\",\r\n              fontWeight: \"700\",\r\n            }}\r\n          >\r\n            <Grid container>\r\n              {Specs.specs?.map((item) => {\r\n                return (\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    xl={12}\r\n                    lg={12}\r\n                    m={12}\r\n                    sm={12}\r\n                    xs={12}\r\n                    key={item.label}\r\n                    sx={{\r\n                      margin: \"auto\",\r\n                      padding: \"20px\",\r\n                      borderRadius: \"30px\",\r\n                      backgroundColor: \"#D9D9D9\",\r\n                      marginBottom: \"15px\",\r\n                    }}\r\n                    data-aos=\"flip-up\"\r\n                  >\r\n                    {item.label !== null && (\r\n                      <>\r\n                        <Typography\r\n                          sx={{\r\n                            fontSize: {\r\n                              xl: \"18px\",\r\n                              lg: \"18px\",\r\n                              m: \"18px\",\r\n                              sm: \"18px\",\r\n                              xs: \"12px\",\r\n                            },\r\n                            fontFamily: \"Montserrat\",\r\n                            color: \"#414141\",\r\n                            textAlign: \"justify\",\r\n                            textTransform: \"capitalize\",\r\n                          }}\r\n                        >\r\n                          <strong\r\n                            style={{\r\n                              fontFamily: \"Montserrat-Bold\",\r\n                            }}\r\n                          >\r\n                            {item.label}&nbsp;:&nbsp;\r\n                          </strong>\r\n                          {item.info}\r\n                        </Typography>\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Box>\r\n          <Box>\r\n            {Specs.application && (\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgba(22, 40, 102, 1)\",\r\n                  fontFamily: \"Montserrat-Bold\",\r\n                  fontSize: {\r\n                    xl: \"3rem\",\r\n                    lg: \"3rem\",\r\n                    m: \"3rem\",\r\n                    sm: \"2rem\",\r\n                    xs: \"1.5rem\",\r\n                  },\r\n                  textAlign: \"center\",\r\n                  marginBottom: \"50px\",\r\n                }}\r\n              >\r\n                Application\r\n              </Typography>\r\n            )}\r\n            {Specs.application?.industries?.map((itm) => {\r\n              return (\r\n                <Typography\r\n                  data-aos=\"zoom-in\"\r\n                  key={itm}\r\n                  sx={{\r\n                    color: \"rgba(60, 60, 59, 1)\",\r\n                    fontFamily: \"Montserrat\",\r\n                    fontSize: {\r\n                      xl: \"2rem\",\r\n                      lg: \"2rem\",\r\n                      m: \"2rem\",\r\n                      sm: \"1.5rem\",\r\n                      xs: \".8rem\",\r\n                    },\r\n                    textAlign: \"center\",\r\n                    margin: \"5px 0\",\r\n                  }}\r\n                >\r\n                  {itm}\r\n                </Typography>\r\n              );\r\n            })}\r\n            <Typography\r\n              sx={{\r\n                color: \"rgba(0, 0, 0, 1)\",\r\n                fontFamily: \"Montserrat\",\r\n                fontSize: {\r\n                  xl: \"1.1rem\",\r\n                  lg: \"1.1rem\",\r\n                  m: \"1.1rem\",\r\n                  sm: \"1rem\",\r\n                  xs: \"1rem\",\r\n                },\r\n                textAlign: \"justify\",\r\n              }}\r\n            >\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              {Specs.moreInfo?.content}\r\n            </Typography>\r\n          </Box>\r\n          {Specs.experienceThePower && (\r\n            <Box>\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgba(22, 40, 102, 1)\",\r\n                  fontFamily: \"Montserrat\",\r\n                  fontSize: {\r\n                    xl: \"2rem\",\r\n                    lg: \"2rem\",\r\n                    m: \"2rem\",\r\n                    sm: \"1.5rem\",\r\n                    xs: \"1.5rem\",\r\n                  },\r\n                  textAlign: \"left\",\r\n                  margin: \"25px 0\",\r\n                }}\r\n              >\r\n                {Specs.experienceThePower.title}\r\n              </Typography>\r\n\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat\",\r\n                  textAlign: \"justify\",\r\n                  marginBottom: \"50px\",\r\n                }}\r\n              >\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                {Specs.experienceThePower.data}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {Specs.keyBenefits && (\r\n            <Box>\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgba(22, 40, 102, 1)\",\r\n                  fontFamily: \"Montserrat\",\r\n                  fontSize: {\r\n                    xl: \"2rem\",\r\n                    lg: \"2rem\",\r\n                    m: \"2rem\",\r\n                    sm: \"1.5rem\",\r\n                    xs: \"1.5rem\",\r\n                  },\r\n                  textAlign: \"left\",\r\n                  margin: \"25px 0\",\r\n                }}\r\n              >\r\n                Key Benefits\r\n              </Typography>\r\n\r\n              <Grid container>\r\n                {Specs.keyBenefits?.map((item) => {\r\n                  return (\r\n                    <Grid\r\n                      data-aos=\"flip-up\"\r\n                      item\r\n                      container\r\n                      xl={12}\r\n                      lg={12}\r\n                      m={12}\r\n                      sm={12}\r\n                      xs={12}\r\n                      key={item.label}\r\n                      sx={{\r\n                        margin: \"auto\",\r\n                        padding: \"20px\",\r\n                        borderRadius: \"30px\",\r\n                        backgroundColor: \"#D9D9D9\",\r\n                        marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      {item.label !== null && (\r\n                        <>\r\n                          <Typography\r\n                            sx={{\r\n                              fontSize: {\r\n                                xl: \"18px\",\r\n                                lg: \"18px\",\r\n                                m: \"18px\",\r\n                                sm: \"18px\",\r\n                                xs: \"12px\",\r\n                              },\r\n                              fontFamily: \"Montserrat\",\r\n                              color: \"#414141\",\r\n                              textAlign: \"justify\",\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            <strong\r\n                              style={{\r\n                                fontFamily: \"Montserrat-Bold\",\r\n                              }}\r\n                            >\r\n                              {item.label}&nbsp;:&nbsp;\r\n                            </strong>\r\n                            {item.info}\r\n                          </Typography>\r\n                        </>\r\n                      )}\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n\r\n          {Specs.types && (\r\n            <Typography\r\n              sx={{\r\n                color: \"rgba(22, 40, 102, 1)\",\r\n                fontFamily: \"Montserrat\",\r\n                fontSize: {\r\n                  xl: \"2rem\",\r\n                  lg: \"2rem\",\r\n                  m: \"2rem\",\r\n                  sm: \"1.5rem\",\r\n                  xs: \"1.5rem\",\r\n                },\r\n                textAlign: \"left\",\r\n                margin: \"25px 0\",\r\n              }}\r\n              data-aos=\"fade-down\"\r\n            >\r\n              Types\r\n            </Typography>\r\n          )}\r\n          {Specs.types?.map((item) => {\r\n            return (\r\n              <Box\r\n                sx={{\r\n                  marginLeft: \"30px\",\r\n                }}\r\n                data-aos=\"zoom-out-left\"\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    color: \"rgba(22, 40, 102, 1)\",\r\n                    fontFamily: \"Montserrat-Bold\",\r\n                    fontSize: {\r\n                      xl: \"1.5rem\",\r\n                      lg: \"1.5rem\",\r\n                      m: \"1.5rem\",\r\n                      sm: \"1rem\",\r\n                      xs: \"1rem\",\r\n                    },\r\n                    textAlign: \"left\",\r\n                    margin: \"25px 0\",\r\n                  }}\r\n                >\r\n                  {item.title}\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontFamily: \"Montserrat\",\r\n                    textAlign: \"justify\",\r\n                  }}\r\n                >\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                  {item.data}\r\n                </Typography>\r\n              </Box>\r\n            );\r\n          })}\r\n\r\n          {Specs.precisionMotorControl && (\r\n            <Box>\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgba(22, 40, 102, 1)\",\r\n                  fontFamily: \"Montserrat\",\r\n                  fontSize: {\r\n                    xl: \"2rem\",\r\n                    lg: \"2rem\",\r\n                    m: \"2rem\",\r\n                    sm: \"1.5rem\",\r\n                    xs: \"1.5rem\",\r\n                  },\r\n                  textAlign: \"left\",\r\n                  margin: \"25px 0\",\r\n                }}\r\n              >\r\n                {Specs.precisionMotorControl.title}\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat\",\r\n                  textAlign: \"justify\",\r\n                  marginBottom: \"50px\",\r\n                }}\r\n              >\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                {Specs.precisionMotorControl.data}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n\r\n          {Specs.subPanel && (\r\n            <Box>\r\n              {\" \"}\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgba(22, 40, 102, 1)\",\r\n                  fontFamily: \"Montserrat-Bold\",\r\n                  fontSize: {\r\n                    xl: \"2rem\",\r\n                    lg: \"2rem\",\r\n                    m: \"2rem\",\r\n                    sm: \"1.5rem\",\r\n                    xs: \"1.5rem\",\r\n                  },\r\n                  textAlign: \"center\",\r\n                  margin: \"25px 0\",\r\n                }}\r\n              >\r\n                {Specs.subPanel.title}\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat\",\r\n                  textAlign: \"justify\",\r\n                }}\r\n              >\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                {Specs.subPanel.desc}\r\n              </Typography>\r\n              {Specs.subPanel.advFeats && (\r\n                <Typography\r\n                  sx={{\r\n                    color: \"rgba(22, 40, 102, 1)\",\r\n                    fontFamily: \"Montserrat\",\r\n                    fontSize: {\r\n                      xl: \"2rem\",\r\n                      lg: \"2rem\",\r\n                      m: \"2rem\",\r\n                      sm: \"1.5rem\",\r\n                      xs: \"1.5rem\",\r\n                    },\r\n                    textAlign: \"left\",\r\n                    margin: \"25px 0\",\r\n                  }}\r\n                >\r\n                  {Specs.subPanel.advFeats.title}\r\n                </Typography>\r\n              )}\r\n              <Grid\r\n                container\r\n                sx={{\r\n                  margin: \"50px 0\",\r\n                }}\r\n              >\r\n                {Specs.subPanel.advFeats.feats?.map((item) => {\r\n                  return (\r\n                    <Grid\r\n                      data-aos=\"flip-up\"\r\n                      item\r\n                      container\r\n                      xl={12}\r\n                      lg={12}\r\n                      m={12}\r\n                      sm={12}\r\n                      xs={12}\r\n                      key={item.label}\r\n                      sx={{\r\n                        margin: \"auto\",\r\n                        padding: \"20px\",\r\n                        borderRadius: \"30px\",\r\n                        backgroundColor: \"#D9D9D9\",\r\n                        marginBottom: \"15px\",\r\n                      }}\r\n                    >\r\n                      {item.label !== null && (\r\n                        <>\r\n                          <Typography\r\n                            sx={{\r\n                              fontSize: {\r\n                                xl: \"18px\",\r\n                                lg: \"18px\",\r\n                                m: \"18px\",\r\n                                sm: \"18px\",\r\n                                xs: \"12px\",\r\n                              },\r\n                              fontFamily: \"Montserrat\",\r\n                              color: \"#414141\",\r\n                              textAlign: \"justify\",\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            <strong\r\n                              style={{\r\n                                fontFamily: \"Montserrat-Bold\",\r\n                              }}\r\n                            >\r\n                              {item.label}&nbsp;:&nbsp;\r\n                            </strong>\r\n                            {item.info}\r\n                          </Typography>\r\n                        </>\r\n                      )}\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n\r\n          {Specs.subPanel?.application && (\r\n            <Typography\r\n              sx={{\r\n                color: \"rgba(22, 40, 102, 1)\",\r\n                fontFamily: \"Montserrat-Bold\",\r\n                fontSize: {\r\n                  xl: \"3rem\",\r\n                  lg: \"3rem\",\r\n                  m: \"3rem\",\r\n                  sm: \"2rem\",\r\n                  xs: \"1.5rem\",\r\n                },\r\n                textAlign: \"center\",\r\n                marginBottom: \"50px\",\r\n              }}\r\n            >\r\n              Application\r\n            </Typography>\r\n          )}\r\n          {Specs.subPanel?.application?.industries?.map((itm) => {\r\n            return (\r\n              <Typography\r\n                data-aos=\"zoom-in\"\r\n                key={itm}\r\n                sx={{\r\n                  color: \"rgba(60, 60, 59, 1)\",\r\n                  fontFamily: \"Montserrat\",\r\n                  fontSize: {\r\n                    xl: \"2rem\",\r\n                    lg: \"2rem\",\r\n                    m: \"2rem\",\r\n                    sm: \"1.5rem\",\r\n                    xs: \".8rem\",\r\n                  },\r\n                  textAlign: \"center\",\r\n                  margin: \"5px 0\",\r\n                }}\r\n              >\r\n                {itm}\r\n              </Typography>\r\n            );\r\n          })}\r\n\r\n          {Specs.powerEneSimp && (\r\n            <Box>\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgba(22, 40, 102, 1)\",\r\n                  fontFamily: \"Montserrat\",\r\n                  fontSize: {\r\n                    xl: \"2rem\",\r\n                    lg: \"2rem\",\r\n                    m: \"2rem\",\r\n                    sm: \"1.5rem\",\r\n                    xs: \"1.5rem\",\r\n                  },\r\n                  textAlign: \"left\",\r\n                  margin: \"25px 0\",\r\n                }}\r\n              >\r\n                {Specs.powerEneSimp.title}\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat\",\r\n                  textAlign: \"justify\",\r\n                  marginBottom: \"50px\",\r\n                }}\r\n              >\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                {Specs.powerEneSimp.data}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { Modal, Fade, IconButton } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport React from \"react\";\r\n\r\nconst ZoomedImage = ({ open, handleClose, src }) => {\r\n  return (\r\n    <Modal open={open} onClose={handleClose} closeAfterTransition>\r\n      <Fade in={open}>\r\n        <div\r\n          style={{\r\n            // position: \"absolute\",\r\n            // top: \"50%\",\r\n            // left: \"50%\",\r\n            // transform: \"translate(-50%, -50%)\",\r\n            // backgroundColor: \"rgba(255, 255, 255, 1)\", // Adjust opacity here\r\n            borderRadius: \"10px\",\r\n            padding: \"20px\",\r\n            maxWidth: \"85%\",\r\n            maxHeight: \"85%\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            // style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <img\r\n            src={src}\r\n            alt=\"\"\r\n            style={{ width: \"85%\", height: \"85%\", borderRadius: \"10px\" }}\r\n          />\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ZoomedImage;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;"],"names":["_Specs$images","_Specs$images2","_Specs$images3","_Specs$specs","_Specs$application","_Specs$application$in","_Specs$moreInfo","_Specs$keyBenefits","_Specs$types","_Specs$subPanel$advFe","_Specs$subPanel","_Specs$subPanel2","_Specs$subPanel2$appl","_Specs$subPanel2$appl2","PanelList","data","panels","panel","useParams","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","selectedImage","setSelectedImage","_useState5","_useState6","timeToLoad","setTimeToLoad","Specs","find","p","path","useEffect","Aos","delay","duration","easing","once","setTimeout","_jsx","_Fragment","children","_jsxs","Box","sx","margin","width","Typography","fontFamily","color","fontSize","name","textAlign","desc","Grid","container","spacing","display","alignItems","justifyContent","item","xs","md","sm","lg","xl","Carousel","animation","images","length","map","i","src","alt","style","height","borderRadius","onClick","Skeleton","variant","ZoomedImage","handleClose","specs","m","fontWeight","marginBottom","whatAre","title","padding","backgroundColor","label","textTransform","info","application","industries","itm","moreInfo","content","experienceThePower","keyBenefits","types","marginLeft","precisionMotorControl","subPanel","advFeats","feats","powerEneSimp","_ref","Modal","onClose","closeAfterTransition","Fade","in","maxWidth","maxHeight","IconButton","CloseIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}